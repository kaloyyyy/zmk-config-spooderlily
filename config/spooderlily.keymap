/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC   &kp GRAVE  &kp N1    &kp N2        &kp N3  &kp N4     &kp N5   &kp LBKT        &kp RBKT      &kp N6  &kp N7         &kp N8     &kp N9    &kp N0    &kp DELETE  &kp PRINTSCREEN
&kp DEL   &kp TAB    &kp Q     &kp W         &kp F   &kp P      &kp G    &kp MINUS       &kp EQUAL     &kp J   &kp L          &kp U      &kp Y     &kp SEMI  &kp BSLH    &kp BACKSPACE
&kp HOME  &kp BSPC   &kp A     &kp R         &kp S   &kp T      &kp D                                  &kp H   &kp N          &kp E      &kp I     &kp O     &kp SQT     &kp RET
&kp END   &kp LSHFT  &kp Z     &kp X         &kp C   &kp V      &kp B    &kp LEFT_ARROW  &kp RIGHT     &kp N   &kp M          &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT   &mo 1
          &kp LCTRL  &kp LWIN  &kp LEFT_ALT  &mo 0   &kp SPACE  &kp RET  &kp DOWN        &kp UP_ARROW  &kp N8  &kp BACKSPACE  &mo 1      &kp RALT  &kp RWIN  &kp RCTRL
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp ESC  &kp GRAVE  &kp N1    &kp N2        &kp N3  &kp N4            &kp N5             &kp N6          &kp N7        &kp N8  &kp N9         &kp N0     &kp BACKSPACE  &kp PRINTSCREEN  &kp DELETE  &kp TAB
&kp Q    &kp W      &kp E     &kp R         &kp T   &kp MINUS         &kp EQUAL          &kp Y           &kp U         &kp I   &kp O          &kp P      &kp MINUS      &kp BACKSLASH    &kp HOME    &kp CAPSLOCK
&kp A    &kp S      &kp D     &kp F         &kp G   &kp LEFT_BRACKET  &kp RIGHT_BRACKET                                &kp H   &kp J          &kp K      &kp L          &kp SEMI         &kp SQT     &kp RET
&kp END  &kp LSHFT  &kp Z     &kp X         &kp C   &kp V             &kp B              &kp LEFT_ARROW  &kp RIGHT     &kp N   &kp M          &kp COMMA  &kp DOT        &kp FSLH         &kp RSHFT   &mo 1
         &kp LCTRL  &kp LWIN  &kp LEFT_ALT  &mo 0   &kp SPACE         &kp RET            &kp DOWN        &kp UP_ARROW  &kp N8  &kp BACKSPACE  &mo 1      &kp RALT       &kp RWIN         &kp RCTRL
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
